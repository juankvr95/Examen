"""
Created on Fri Dec 13 11:26:25 2019

@author: Vilatuña Juan
"""



import numpy as np
import signals as s
import pylab as plt 
from numpy import cumsum




#Señal original ecg_100Hz
x=s.ecg_100Hz
plt.plot(x)
plt.plot(x,'r.')


############# METODO DIFF PARA FIRST DIFERENCE ################

x1=s.ecg_100Hz
y1=np.diff(x1)
plt.plot(y1)


##################### FIRST DIFERENCE PROGRAMADO ###############
def d(x):
    y=[]
    for i in range (0, len(x)):
        v=x[i]-x[i-1]
        y.append(v)
        print(y)
        plt.plot(y)
        plt.plot(y,'y.')
        
d(x)

################ MÉTODO RUNNUN SUM ##################

r=list(cumsum(x1))
print(r)
plt.plot(r)


################### RUNNING SUM PROGRAMADO#####################

def s(x):
    y=[0]
    for i in range (1, len(x)):
        v=x[i]+y[i-1]
        y.append(v)
    print(y)
    plt.plot(y,'r.')

s(x)


######################################################################


####### Señal original ruido_100Hz#########
x=s.ruido_100Hz
plt.plot(x)
plt.plot(x,'r.')


############# METODO DIFF PARA FIRST DIFERENCE ################

x1=s.ruido_100Hz
y1=np.diff(x1)
plt.plot(y1)


##################### FIRST DIFERENCE PROGRAMADO ###############

def d(x):
    y=[]
    for i in range (0, len(x)):
        v=x[i]-x[i-1]
        y.append(v)
        print(y)
        plt.plot(y)
        plt.plot(y,'y.')
        
d(x)
################ MÉTODO RUNNUN SUM ##################

r=list(cumsum(x1))
print(r)
plt.plot(r)


################### RUNNING SUM PROGRAMADO#####################

def s(x):
    y=[0]
    for i in range (1, len(x)):
        v=x[i]+y[i-1]
        y.append(v)
    print(y)
    plt.plot(y,'r.')

s(x)

###########################################################

######## Señal original ruido_1KHz ######

x=s.ruido_1KHz
plt.plot(x)
plt.plot(x,'r.')


############# METODO DIFF PARA FIRST DIFERENCE ################

x1=s.ruido_1KHz
y1=np.diff(x1)
plt.plot(y1)


##################### FIRST DIFERENCE PROGRAMADO ###############

def d(x):
    y=[]
    for i in range (0, len(x)):
        v=x[i]-x[i-1]
        y.append(v)
        print(y)
        plt.plot(y)
        plt.plot(y,'y.')
        
d(x)
################ MÉTODO RUNNUN SUM ##################

r=list(cumsum(x1))
print(r)
plt.plot(r)


################### RUNNING SUM PROGRAMADO#####################

def s(x):
    y=[0]
    for i in range (1, len(x)):
        v=x[i]+y[i-1]
        y.append(v)
    print(y)
    plt.plot(y,'r.')

s(x)

###########################################################

    #Señal original ruido_extra_100Hz
    
    x=s.ruido_extra_100Hz
    plt.plot(x)
    plt.plot(x,'r.')
    
    
    ############# METODO DIFF PARA FIRST DIFERENCE ################
    
    x1=s.ruido_extra_100Hz
    y1=np.diff(x1)
    plt.plot(y1)
    
    
    ##################### FIRST DIFERENCE PROGRAMADO ###############
    
    def d(x):
        y=[]
        for i in range (0, len(x)):
            v=x[i]-x[i-1]
            y.append(v)
            print(y)
            plt.plot(y)
            plt.plot(y,'y.')
            
    d(x)
    ################ MÉTODO RUNNUN SUM ##################
    
    r=list(cumsum(x1))
    print(r)
    plt.plot(r)
    
    
    ################### RUNNING SUM PROGRAMADO#####################
    
    def s(x):
        y=[0]
        for i in range (1, len(x)):
            v=x[i]+y[i-1]
            y.append(v)
        print(y)
        plt.plot(y,'r.')
    
    s(x)



#Señal original airflow_100Hz
    
    x=s.airflow_100Hz
    plt.plot(x)
    plt.plot(x,'r.')
    
    
    ############# METODO DIFF PARA FIRST DIFERENCE ################
    
    x1=s.airflow_100Hz
    y1=np.diff(x1)
    plt.plot(y1)
    
    
    ##################### FIRST DIFERENCE PROGRAMADO ###############
    
    def d(x):
        y=[]
        for i in range (0, len(x)):
            v=x[i]-x[i-1]
            y.append(v)
            print(y)
            plt.plot(y)
            plt.plot(y,'y.')
            
    d(x)
    ################ MÉTODO RUNNUN SUM ##################
    
    r=list(cumsum(x1))
    print(r)
    plt.plot(r)
    
    
    ################### RUNNING SUM PROGRAMADO#####################
    
    def s(x):
        y=[0]
        for i in range (1, len(x)):
            v=x[i]+y[i-1]
            y.append(v)
        print(y)
        plt.plot(y,'r.')
    
    s(x)


#Señal original airflow_calibrated_100Hz
    
    x=s.airflow_calibrated_100Hz
    plt.plot(x)
    plt.plot(x,'r.')
    
    
    ############# METODO DIFF PARA FIRST DIFERENCE ################
    
    x1=s.airflow_100Hz
    y1=np.diff(x1)
    plt.plot(y1)
    
    
    ##################### FIRST DIFERENCE PROGRAMADO ###############
    
    def d(x):
        y=[]
        for i in range (0, len(x)):
            v=x[i]-x[i-1]
            y.append(v)
            print(y)
            plt.plot(y)
            plt.plot(y,'y.')
            
    d(x)
    ################ MÉTODO RUNNUN SUM ##################
    
    r=list(cumsum(x1))
    print(r)
    plt.plot(r)
    
    
    ################### RUNNING SUM PROGRAMADO#####################
    
    def s(x):
        y=[0]
        for i in range (1, len(x)):
            v=x[i]+y[i-1]
            y.append(v)
        print(y)
        plt.plot(y,'r.')
    
    s(x)


